{"version":3,"sources":["components/layout/Layout.jsx","redux/types/types.js","axios/geocoding.js","axios/getTimeData.js","axios/mapWeatherData.js","axios/convertWindDirection.js","axios/fetch-data.js","components/ui/MainPageMessage.jsx","components/pages/Main.jsx","redux/actions/fetchWeatherData.js","App.js","reportWebVitals.js","redux/reducers/weatherReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["Header","styled","header","Content","main","Layout","children","useEffect","WebFont","load","google","families","className","FETCH_DATA","getGeoData","city","a","axios","get","geoData","data","lat","lon","getTimeData","time","timeToConvert","Date","hours","getHours","minutes","getMinutes","mapWeatherData","days","map","dataItem","index","weather","temp","dt","humidity","pressure","icon","day","Math","round","length","convertWindDirection","value","fetchData","today","week","todayData","weekData","name","wind","visibility","sys","hourly","daily","weatherType","keyIndicators","title","units","speed","deg","feels_like","sunrise","sunset","weatherDescr","description","slice","MessageBody","div","MainPageMessage","WeatherInfo","React","lazy","MainBody","section","Form","form","connect","state","fetchWeatherData","dispatch","then","response","type","payload","catch","error","message","useState","setCity","onChange","event","target","placeholder","onClick","faCheck","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","weatherReducer","action","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91878978.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useEffect } from 'react';\r\nimport WebFont from 'webfontloader';\r\n\r\n\r\nconst Layout = ({children}) => {\r\n    useEffect(() => {\r\n        WebFont.load({\r\n            google: {\r\n                families: ['Nunito Sans', 'Fugaz One']\r\n            }\r\n        })\r\n    }, [])\r\n    \r\n    return (\r\n        <>\r\n            <Header>\r\n                <div className='logo'>w</div>\r\n            </Header>\r\n            <Content>\r\n                {children}\r\n            </Content>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst Header = styled.header`\r\n    padding: 0 15%;\r\n    width: 100%;\r\n    height: 10vh;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    font-family: 'Nunito Sans';\r\n    background: rgb(255, 255, 255);\r\n    color: rgb(107, 86, 253);\r\n    box-sizing: border-box;\r\n    .logo {\r\n        font-family: 'Fugaz One';\r\n        font-weight: 700;\r\n        font-size: 46px;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        padding: 0 10px;\r\n    }\r\n`;\r\n\r\nconst Content = styled.main`\r\n    position: relative;\r\n    padding: 20px 15%;\r\n    width: 100%;\r\n    min-height: 90vh;\r\n    font-family: 'Nunito Sans';\r\n    background: rgb(255, 255, 255);\r\n    color: rgb(101, 109, 112);\r\n    box-sizing: border-box;\r\n    font-display: swap;\r\n\r\n    @media (max-width: 768px) {\r\n        padding: 10px;\r\n    }\r\n`;\r\n\r\n\r\nexport default Layout;","export const FETCH_DATA = 'FETCH_DATA';\r\n","import axios from 'axios';\r\n\r\n\r\nexport const getGeoData = async city => {\r\n    let geoData = await axios.get(`http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=5&appid=8744ada665b095444259f2a3a6b4d0f4`);\r\n    const {lat, lon} = geoData.data[0];\r\n    return {\r\n        lat,\r\n        lon\r\n    }\r\n}","export const getTimeData = time => {\r\n    const timeToConvert = new Date(time);\r\n    const hours = timeToConvert.getHours();\r\n    const minutes = timeToConvert.getMinutes();\r\n    return `${hours < 10 ? '0' + hours : hours}:${minutes < 10 ? '0' + minutes : minutes}`;\r\n};","import {getTimeData} from './getTimeData';\r\n\r\nexport const mapWeatherData = data => {\r\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    \r\n    return data.map((dataItem, index) => {\r\n        const { weather, temp, dt, humidity, pressure } = dataItem;\r\n        return {\r\n            icon: weather[0].icon,\r\n            temp: temp.day ? Math.round(temp.day - 273.15) : Math.round(temp - 273.15),\r\n            time: data.length > 7 ? getTimeData(dt * 1000) : days[index],\r\n            humidity: humidity,\r\n            pressure: Math.round(pressure / 1.333)\r\n        };\r\n    });\r\n};","export const convertWindDirection = value => {\r\n    switch(true) {\r\n        case value > 348.75 || value < 11.25:\r\n            return 'N';\r\n        case value < 33.75:\r\n            return 'NNE';\r\n        case value < 56.25:\r\n            return 'NE';\r\n        case value < 78.75:\r\n            return 'ENE';\r\n        case value < 101.25:\r\n            return 'E';\r\n        case value < 123.75:\r\n            return 'ESE';\r\n        case value < 146.25:\r\n            return 'SE';\r\n        case value < 168.75:\r\n            return 'SSE';\r\n        case value < 191.25:\r\n            return 'S';\r\n        case value < 213.75:\r\n            return 'SSW';\r\n        case value < 236.25:\r\n            return 'SW';\r\n        case value < 258.75:\r\n            return 'WSW';\r\n        case value < 281.25:\r\n            return 'W';\r\n        case value < 303.75:\r\n            return 'WNW';\r\n        case value < 326.25:\r\n            return 'NW';\r\n        case value < 348.75:\r\n            return 'NW';\r\n        default:\r\n            return 'No data';\r\n    }\r\n}","import axios from 'axios';\r\nimport {getGeoData} from './geocoding';\r\nimport {getTimeData} from '../axios/getTimeData';\r\nimport {mapWeatherData} from './mapWeatherData';\r\nimport {convertWindDirection} from '../axios/convertWindDirection';\r\n\r\n\r\nexport const fetchData = async city => {\r\n    const geoData = await getGeoData(city);\r\n    const data = {\r\n        today: '',\r\n        week: ''\r\n    };\r\n\r\n    let todayData = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=8744ada665b095444259f2a3a6b4d0f4`);\r\n    let weekData = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${geoData.lat}&lon=${geoData.lon}&appid=8744ada665b095444259f2a3a6b4d0f4`);\r\n\r\n    const { name, main, wind, visibility, sys, weather } = todayData.data;\r\n    const { hourly, daily } = weekData.data;\r\n\r\n    data.today = {\r\n        city: name,\r\n        weatherType: weather[0].main,\r\n        keyIndicators: [\r\n            {title: 'Humidity', value: main.humidity, units: '%'},\r\n            {title: 'Pressure', value: Math.round(main.pressure / 1.333), units: 'mm.m'},\r\n            {title: 'Wind Speed', value: Math.round((wind.speed * 10) / 2.237), units: 'm/s'},\r\n            {title: 'Wind Direction', value: convertWindDirection(wind.deg), units: ''},\r\n            {title: 'Feels Like', value: Math.round(main.feels_like - 273.15), units: 'C'},\r\n            {title: 'Visibility', value: visibility / 1000, units: 'km'}\r\n        ],\r\n        sunrise: getTimeData(sys.sunrise * 1000),\r\n        sunset: getTimeData(sys.sunset * 1000),\r\n        temp: Math.round(main.temp - 273.15),\r\n        weatherDescr: weather[0].description,\r\n        icon: weather[0].icon,\r\n        hourly: mapWeatherData(hourly.slice(0, 24))\r\n    };\r\n\r\n    data.week = mapWeatherData(daily.slice(1));\r\n\r\n    return data;\r\n};","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst MainPageMessage = ({ data }) => {\r\n    return (\r\n        <MessageBody>\r\n            {data.today === null ? 'Search for a location...' : 'Location name is incorrect!'}\r\n        </MessageBody>\r\n    )\r\n}\r\n\r\nconst MessageBody = styled.div`\r\n    padding: 20px 0;\r\n    font-size: 26px;\r\n`;\r\n\r\nexport default MainPageMessage;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {fetchWeatherData} from '../../redux/actions/fetchWeatherData';\r\nimport MainPageMessage from '../ui/MainPageMessage';\r\nconst WeatherInfo = React.lazy(() => import('./WeatherInfo'));\r\n\r\n\r\nconst Main = ({weather, fetchWeatherData}) => {\r\n    const [city, setCity] = useState('');\r\n    const onHandleInput = event => {\r\n        setCity(event.target.value);\r\n    }\r\n    const submitCity = () => {\r\n        if(city) {\r\n            fetchWeatherData(city);\r\n            setCity('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <MainBody>\r\n            <Form>\r\n                <input onChange={onHandleInput} value={city} placeholder='location' />\r\n                <button type='button' onClick={submitCity}>\r\n                    <FontAwesomeIcon icon={faCheck} />\r\n                </button>\r\n            </Form>\r\n            {weather.today && weather.week ?\r\n                <WeatherInfo data={weather} /> :\r\n                <MainPageMessage data={weather} />\r\n            }\r\n        </MainBody>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        weather: state.weather\r\n    }\r\n}\r\n\r\n\r\nconst MainBody = styled.section`\r\n    position: relative;\r\n    width: 100%;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    \r\n\r\n    input {\r\n        width: 50%;\r\n        height: 20px;\r\n        padding: 10px 15px;\r\n        border: none;\r\n        border-radius: 3px 0 0 3px;\r\n        font-size: 18px;\r\n        background: rgb(236, 236, 236);\r\n        &:focus {\r\n            outline-width: 0;\r\n        }\r\n\r\n        @media (max-width: 768px) {\r\n            width: 80%;\r\n            height: 36px;\r\n        }\r\n    }\r\n    button {\r\n        width: 50px;\r\n        border: none;\r\n        border-radius: 0 3px 3px 0;\r\n        font-size: 18px;\r\n        color: rgb(98, 161, 253);\r\n        &:hover {\r\n            cursor: pointer;\r\n        }\r\n\r\n        @media (max-width: 768px) {\r\n            width: 20%;\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport default connect(mapStateToProps, {fetchWeatherData})(Main);","import {FETCH_DATA} from '../types/types';\r\nimport {fetchData} from '../../axios/fetch-data';\r\n\r\n\r\nexport const fetchWeatherData = city => dispatch => {\r\n    fetchData(city)\r\n        .then(response => {\r\n            dispatch({\r\n                type: FETCH_DATA,\r\n                payload: response\r\n            })\r\n        })\r\n        .catch(error => {\r\n            dispatch({\r\n                type: FETCH_DATA,\r\n                payload: error.message\r\n            })\r\n        })\r\n};","import React from 'react';\nimport './App.css';\nimport Layout from './components/layout/Layout';\nimport Main from './components/pages/Main';\n\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Layout>\n\t\t\t\t<Main />\n\t\t\t</Layout>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {FETCH_DATA} from '../types/types';\r\n\r\nconst initialState = {\r\n    today: null,\r\n    week: null\r\n};\r\n\r\nconst weatherReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FETCH_DATA:\r\n            return {\r\n                ...state,\r\n                today: action.payload.today,\r\n                week: action.payload.week\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default weatherReducer;","import {combineReducers} from 'redux';\r\nimport weatherReducer from './weatherReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    weather: weatherReducer\r\n});\r\n\r\nexport default rootReducer;","import { applyMiddleware, createStore } from 'redux';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst store = createStore(rootReducer, {}, applyMiddleware(thunk));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}